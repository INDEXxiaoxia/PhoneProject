<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.alibaba.com/schema/stat"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.alibaba.com/schema/stat http://www.alibaba.com/schema/stat.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- spring加载 *.properties文件-->
    <context:property-placeholder location="classpath:database.properties"></context:property-placeholder>

    <!-- 配置全局扫描-->
    <context:component-scan base-package="com.Xx1.phone"></context:component-scan>
    <!-- 开启AOP的注解模式-->
    <aop:aspectj-autoproxy/>
    <!-- 配置事务的管理. 默认的事务，只需进行注解事务的开启-->
    <tx:annotation-driven/>
    <mvc:annotation-driven>
        <!-- converters : 类型转换器。转换的主要是 后台返回结果给前端时，数据类型 -->
        <mvc:message-converters register-defaults="true">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter"
                  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- springmvc默认放行资源的handler-->
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven/>

    <!-- 配置数据库的连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="filters" value="stat"/>
        <property name="maxActive" value="20"/>
        <property name="initialSize" value="1"/>
        <property name="maxWait" value="60000"/>
        <property name="minIdle" value="1"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
    </bean>
    <!-- 配置mybatis的相关参数-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描包的方式统一配置别名 -->
        <property name="typeAliasesPackage" value="com.Xx1.phone.model"/>
        <!-- 下面的这个配置，直接取代了mybatis默认的全局配置文件：SqlMapConfig.xml 。下面的配置，必须mybatis的版本在1.3之后-->
        <!--<property name="configuration">-->
            <!--&lt;!&ndash; 特别注意导入的Configuration的包路径。主要配置的就是原来SqlMapConfig中的settings/mappers/....&ndash;&gt;-->
            <!--<bean class="org.apache.ibatis.session.Configuration">-->
                <!--<property name="mapUnderscoreToCamelCase" value="false"></property>-->
            <!--</bean>-->
        <!--</property>-->
        <!--添加pageHelper分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="helperDialect">mysql</prop>
                            <prop key="reasonable">true</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 使用tkmapper插件扫描dao的接口-->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.Xx1.phone.mapper"></property>
    </bean>

    <!-- 配置springmvc的视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置前缀和后缀-->
        <property name="prefix" value="/static/html/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>


</beans>